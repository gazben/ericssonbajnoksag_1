// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Response.capnp

#include "Response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<62> b_ac45fd4d695dcf29 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41, 207,  93, 105,  77, 253,  69, 172,
     15,   0,   0,   0,   1,   0,   1,   0,
    250, 142,  82, 187,  81, 216,  55, 192,
      2,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 115, 112, 111, 110, 115, 101,
     46,  99,  97, 112, 110, 112,  58,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,  16,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 103, 102, 105, 120,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93, 167, 238,  17, 101, 122, 236, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ac45fd4d695dcf29 = b_ac45fd4d695dcf29.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ac45fd4d695dcf29[] = {
  &s_f0ec7a6511eea75d,
};
static const uint16_t m_ac45fd4d695dcf29[] = {1, 2, 0};
static const uint16_t i_ac45fd4d695dcf29[] = {1, 2, 0};
const ::capnp::_::RawSchema s_ac45fd4d695dcf29 = {
  0xac45fd4d695dcf29, b_ac45fd4d695dcf29.words, 62, d_ac45fd4d695dcf29, m_ac45fd4d695dcf29,
  1, 3, i_ac45fd4d695dcf29, nullptr, nullptr, { &s_ac45fd4d695dcf29, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Response
constexpr uint16_t Response::_capnpPrivate::dataWordSize;
constexpr uint16_t Response::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Response::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



